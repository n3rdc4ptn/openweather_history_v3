name: Terraform Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Add locations.json to the functions directory.
        run: echo '${{ secrets.LOCATIONS_JSON }}' > locations.json
        working-directory: ./function

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - uses: hashicorp/setup-terraform@v2

      - run: terraform init
        working-directory: ./terraform

      - id: plan
        name: "Plan"
        env:
          TF_AUTO_VARS: ${{ secrets.TF_AUTO_VARS }}
        run: |
          echo "$TF_AUTO_VARS" > terraform.auto.tfvars

          terraform plan -no-color -input=false -out=tfplan

          echo "~~~" >> $GITHUB_STEP_SUMMARY
          terraform show -no-color tfplan >> $GITHUB_STEP_SUMMARY
          echo "~~~" >> $GITHUB_STEP_SUMMARY
        working-directory: ./terraform

      - uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: terraform/tfplan
          if-no-files-found: error

      - uses: actions/upload-artifact@v3
        with:
          name: functionarchive
          path: terraform/function.zip
          if-no-files-found: error

  apply:
    name: "Apply"
    needs: plan
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - uses: hashicorp/setup-terraform@v2

      - run: terraform init
        working-directory: ./terraform

      - uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: terraform

      - uses: actions/download-artifact@v3
        with:
          name: functionarchive
          path: terraform

      - name: "Apply"
        run: |
          echo "$TF_AUTO_VARS" > terraform.auto.tfvars
          terraform apply -input=false -auto-approve tfplan
        env:
          TF_AUTO_VARS: ${{ secrets.TF_AUTO_VARS }}
        working-directory: ./terraform
